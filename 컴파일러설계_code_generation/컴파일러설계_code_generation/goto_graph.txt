ID[ 0] (  7) : L' -> . L      L -> . S      L -> . L ; S      S -> . { L }      S -> . id = E      S -> . if ( BE ) then S else S      S -> . while ( BE ) do S      
ID[ 1] (  1) : S -> id . = E      
ID[ 2] (  7) : S -> { . L }      L -> . S      L -> . L ; S      S -> . { L }      S -> . id = E      S -> . if ( BE ) then S else S      S -> . while ( BE ) do S      
ID[ 3] (  1) : S -> if . ( BE ) then S else S      
ID[ 4] (  1) : S -> while . ( BE ) do S      
ID[ 5] (  2) : L' -> L .     L -> L . ; S      
ID[ 6] (  1) : L -> S .     
ID[ 7] ( 10) : S -> id = . E      E -> . T      E -> . E + T      E -> . E - T      T -> . F      T -> . T * F      T -> . T / F      F -> . id      F -> . num      F -> . ( E )      
ID[ 8] (  2) : S -> { L . }      L -> L . ; S      
ID[ 9] ( 19) : S -> if ( . BE ) then S else S      BE -> . BT      BE -> . BE || BT      BT -> . BF      BT -> . BT && BF      BF -> . true      BF -> . false      BF -> . E rop E      BF -> . ( BE )      BF -> . ! BF      E -> . T      E -> . E + T      E -> . E - T      T -> . F      T -> . T * F      T -> . T / F      F -> . id      F -> . num      F -> . ( E )      
ID[10] ( 19) : S -> while ( . BE ) do S      BE -> . BT      BE -> . BE || BT      BT -> . BF      BT -> . BT && BF      BF -> . true      BF -> . false      BF -> . E rop E      BF -> . ( BE )      BF -> . ! BF      E -> . T      E -> . E + T      E -> . E - T      T -> . F      T -> . T * F      T -> . T / F      F -> . id      F -> . num      F -> . ( E )      
ID[11] (  5) : L -> L ; . S      S -> . { L }      S -> . id = E      S -> . if ( BE ) then S else S      S -> . while ( BE ) do S      
ID[12] (  1) : F -> id .     
ID[13] (  1) : F -> num .     
ID[14] ( 10) : F -> ( . E )      E -> . T      E -> . E + T      E -> . E - T      T -> . F      T -> . T * F      T -> . T / F      F -> . id      F -> . num      F -> . ( E )      
ID[15] (  3) : S -> id = E .     E -> E . + T      E -> E . - T      
ID[16] (  3) : E -> T .     T -> T . * F      T -> T . / F      
ID[17] (  1) : T -> F .     
ID[18] (  1) : S -> { L } .     
ID[19] ( 15) : BF -> ! . BF      BF -> . true      BF -> . false      BF -> . E rop E      BF -> . ( BE )      BF -> . ! BF      E -> . T      E -> . E + T      E -> . E - T      T -> . F      T -> . T * F      T -> . T / F      F -> . id      F -> . num      F -> . ( E )      
ID[20] ( 20) : BF -> ( . BE )      F -> ( . E )      BE -> . BT      BE -> . BE || BT      E -> . T      E -> . E + T      E -> . E - T      BT -> . BF      BT -> . BT && BF      T -> . F      T -> . T * F      T -> . T / F      BF -> . true      BF -> . false      BF -> . E rop E      BF -> . ( BE )      BF -> . ! BF      F -> . id      F -> . num      F -> . ( E )      
ID[21] (  1) : BF -> true .     
ID[22] (  1) : BF -> false .     
ID[23] (  3) : BF -> E . rop E      E -> E . + T      E -> E . - T      
ID[24] (  2) : S -> if ( BE . ) then S else S      BE -> BE . || BT      
ID[25] (  2) : BE -> BT .     BT -> BT . && BF      
ID[26] (  1) : BT -> BF .     
ID[27] (  2) : S -> while ( BE . ) do S      BE -> BE . || BT      
ID[28] (  1) : L -> L ; S .     
ID[29] (  3) : F -> ( E . )      E -> E . + T      E -> E . - T      
ID[30] (  7) : E -> E + . T      T -> . F      T -> . T * F      T -> . T / F      F -> . id      F -> . num      F -> . ( E )      
ID[31] (  7) : E -> E - . T      T -> . F      T -> . T * F      T -> . T / F      F -> . id      F -> . num      F -> . ( E )      
ID[32] (  4) : T -> T * . F      F -> . id      F -> . num      F -> . ( E )      
ID[33] (  4) : T -> T / . F      F -> . id      F -> . num      F -> . ( E )      
ID[34] (  1) : BF -> ! BF .     
ID[35] (  4) : F -> ( E . )      E -> E . + T      E -> E . - T      BF -> E . rop E      
ID[36] (  2) : BF -> ( BE . )      BE -> BE . || BT      
ID[37] ( 10) : BF -> E rop . E      E -> . T      E -> . E + T      E -> . E - T      T -> . F      T -> . T * F      T -> . T / F      F -> . id      F -> . num      F -> . ( E )      
ID[38] (  1) : S -> if ( BE ) . then S else S      
ID[39] ( 17) : BE -> BE || . BT      BT -> . BF      BT -> . BT && BF      BF -> . true      BF -> . false      BF -> . E rop E      BF -> . ( BE )      BF -> . ! BF      E -> . T      E -> . E + T      E -> . E - T      T -> . F      T -> . T * F      T -> . T / F      F -> . id      F -> . num      F -> . ( E )      
ID[40] ( 15) : BT -> BT && . BF      BF -> . true      BF -> . false      BF -> . E rop E      BF -> . ( BE )      BF -> . ! BF      E -> . T      E -> . E + T      E -> . E - T      T -> . F      T -> . T * F      T -> . T / F      F -> . id      F -> . num      F -> . ( E )      
ID[41] (  1) : S -> while ( BE ) . do S      
ID[42] (  1) : F -> ( E ) .     
ID[43] (  3) : E -> E + T .     T -> T . * F      T -> T . / F      
ID[44] (  3) : E -> E - T .     T -> T . * F      T -> T . / F      
ID[45] (  1) : T -> T * F .     
ID[46] (  1) : T -> T / F .     
ID[47] (  1) : BF -> ( BE ) .     
ID[48] (  3) : BF -> E rop E .     E -> E . + T      E -> E . - T      
ID[49] (  5) : S -> if ( BE ) then . S else S      S -> . { L }      S -> . id = E      S -> . if ( BE ) then S else S      S -> . while ( BE ) do S      
ID[50] (  2) : BE -> BE || BT .     BT -> BT . && BF      
ID[51] (  1) : BT -> BT && BF .     
ID[52] (  5) : S -> while ( BE ) do . S      S -> . { L }      S -> . id = E      S -> . if ( BE ) then S else S      S -> . while ( BE ) do S      
ID[53] (  1) : S -> if ( BE ) then S . else S      
ID[54] (  1) : S -> while ( BE ) do S .     
ID[55] (  5) : S -> if ( BE ) then S else . S      S -> . { L }      S -> . id = E      S -> . if ( BE ) then S else S      S -> . while ( BE ) do S      
ID[56] (  1) : S -> if ( BE ) then S else S .     
Total number of states = 57

Goto arcs:
From   To  Symbol
   0    1    id 
   0    2    { 
   0    3    if 
   0    4    while 
   0    5    L 
   0    6    S 
   1    7    = 
   2    1    id 
   2    2    { 
   2    3    if 
   2    4    while 
   2    8    L 
   2    6    S 
   3    9    ( 
   4   10    ( 
   5   11    ; 
   7   12    id 
   7   13    num 
   7   14    ( 
   7   15    E 
   7   16    T 
   7   17    F 
   8   18    } 
   8   11    ; 
   9   12    id 
   9   13    num 
   9   19    ! 
   9   20    ( 
   9   21    true 
   9   22    false 
   9   23    E 
   9   16    T 
   9   17    F 
   9   24    BE 
   9   25    BT 
   9   26    BF 
  10   12    id 
  10   13    num 
  10   19    ! 
  10   20    ( 
  10   21    true 
  10   22    false 
  10   23    E 
  10   16    T 
  10   17    F 
  10   27    BE 
  10   25    BT 
  10   26    BF 
  11    1    id 
  11    2    { 
  11    3    if 
  11    4    while 
  11   28    S 
  14   12    id 
  14   13    num 
  14   14    ( 
  14   29    E 
  14   16    T 
  14   17    F 
  15   30    + 
  15   31    - 
  16   32    * 
  16   33    / 
  19   12    id 
  19   13    num 
  19   19    ! 
  19   20    ( 
  19   21    true 
  19   22    false 
  19   23    E 
  19   16    T 
  19   17    F 
  19   34    BF 
  20   12    id 
  20   13    num 
  20   19    ! 
  20   20    ( 
  20   21    true 
  20   22    false 
  20   35    E 
  20   16    T 
  20   17    F 
  20   36    BE 
  20   25    BT 
  20   26    BF 
  23   37    rop 
  23   30    + 
  23   31    - 
  24   38    ) 
  24   39    || 
  25   40    && 
  27   41    ) 
  27   39    || 
  29   30    + 
  29   31    - 
  29   42    ) 
  30   12    id 
  30   13    num 
  30   14    ( 
  30   43    T 
  30   17    F 
  31   12    id 
  31   13    num 
  31   14    ( 
  31   44    T 
  31   17    F 
  32   12    id 
  32   13    num 
  32   14    ( 
  32   45    F 
  33   12    id 
  33   13    num 
  33   14    ( 
  33   46    F 
  35   37    rop 
  35   30    + 
  35   31    - 
  35   42    ) 
  36   47    ) 
  36   39    || 
  37   12    id 
  37   13    num 
  37   14    ( 
  37   48    E 
  37   16    T 
  37   17    F 
  38   49    then 
  39   12    id 
  39   13    num 
  39   19    ! 
  39   20    ( 
  39   21    true 
  39   22    false 
  39   23    E 
  39   16    T 
  39   17    F 
  39   50    BT 
  39   26    BF 
  40   12    id 
  40   13    num 
  40   19    ! 
  40   20    ( 
  40   21    true 
  40   22    false 
  40   23    E 
  40   16    T 
  40   17    F 
  40   51    BF 
  41   52    do 
  43   32    * 
  43   33    / 
  44   32    * 
  44   33    / 
  48   30    + 
  48   31    - 
  49    1    id 
  49    2    { 
  49    3    if 
  49    4    while 
  49   53    S 
  50   40    && 
  52    1    id 
  52    2    { 
  52    3    if 
  52    4    while 
  52   54    S 
  53   55    else 
  55    1    id 
  55    2    { 
  55    3    if 
  55    4    while 
  55   56    S 
Total number of arcs = 172
